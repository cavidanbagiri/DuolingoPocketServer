


-------------------------------------------------------------------- Deepseek -------------------------------------

Super. Now l wanna fetch the 'es' words from word_model and translate to 'en' language

This is my models.

    class Word(Base):
        __tablename__ = "words"
        id = Column(Integer, primary_key=True)
        text = Column(String(100), unique=True)  # "book" (shared spelling)
        language_code = Column(String(2))       # "en"
        frequency_rank = Column(Integer)
        level = mapped_column(String(2))  # A1-C2

        meanings = relationship("WordMeaning", back_populates="word")
        translations = relationship("Translation", back_populates="source_word")  # This was missing
        in_sentences = relationship("SentenceWord", back_populates="word")  # Also add this for comp

        def __repr__(self):
            return f'Word(id:({self.id}), text({self.text}, language_code({self.language_code}, frequency_rank:({self.frequency_rank}, level({self.level})))))'



    class Translation(Base):
        __tablename__ = "translations"
        id = mapped_column(Integer, primary_key=True)
        source_word_id = mapped_column(Integer, ForeignKey("words.id"))
        target_language_code = mapped_column(String(2), ForeignKey("languages.code"))
        translated_text = mapped_column(String(100))  # "hello" â†’ "hola"

        source_word = relationship("Word", back_populates="translations")


        target_language = relationship("Language", lazy="joined")

This is my repository for doing it.

    class TranslateSpanishWordsToEnglish:

        def __init__(self, db: AsyncSession):
            self.db = db
            self.api_key = os.getenv("YANDEX_TRANSLATE_API_SECRET_KEY")
            self.folder_id = os.getenv("YANDEX_FOLDER_ID")
            self.translate_url = "https://translate.api.cloud.yandex.net/translate/v2/translate"

        async def translate_spanish_words_to_english(self):

            print('spanish words is translated to english')

            return {'msg':'translate'}


